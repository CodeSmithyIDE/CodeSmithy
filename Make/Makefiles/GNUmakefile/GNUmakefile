# This file was automatically generated by bakefile.
#
# Any manual changes will be lost if it is regenerated,
# modify the source .bkl file instead if possible.

# You may define standard make variables such as CFLAGS or
# CXXFLAGS to affect the build. For example, you could use:
#
#      make CXXFLAGS=-g
#
# to build with debug information. The full list of variables
# that can be used by this makefile is:
# AR, CC, CFLAGS, CPPFLAGS, CXX, CXXFLAGS, LD, LDFLAGS, MAKE, RANLIB.

# You may also specify config=Debug|Release
# or their corresponding lower case variants on make command line to select
# the corresponding default flags values.
ifeq ($(config),debug)
override config := Debug
endif
ifeq ($(config),release)
override config := Release
endif
ifeq ($(config),Debug)
override CPPFLAGS += -DDEBUG
override CFLAGS += -g -O0
override CXXFLAGS += -g -O0
override LDFLAGS += -g
else ifeq ($(config),Release)
override CPPFLAGS += -DNDEBUG
override CFLAGS += -O2
override CXXFLAGS += -O2
else ifneq (,$(config))
$(warning Unknown configuration "$(config)")
endif
#
# Additionally, this makefile is customizable with the following
# settings:
#
#      ISHIKO_PROCESS_ROOT       Path to the Ishiko Process installation
#      BOOST_ROOT                Path to the Boost installation
#      PUGIXML_ROOT              Path to the pugixml installation
#      LIBGIT2_ROOT              Path to the libgit2 installation
#      ISHIKO_COLLECTIONS_ROOT   Path to the Ishiko Collections installation
#      ISHIKO_ERRORS_ROOT        Path to the Ishiko Errors installation
#      DIPLODOCUSDB_CORE_ROOT    Path to the DiplodocusDB installation
#      DIPLODOCUSDB_TREEDB_ROOT  Path to the DiplodocusDB installation
#      CODESMITHY_ROOT           Path to the CodeSmithy installation

# Use "make RANLIB=''" for platforms without ranlib.
RANLIB ?= ranlib

CC := cc
CXX := c++

# The directory for the build files, may be overridden on make command line.
builddir = .

ifneq ($(builddir),.)
_builddir := $(if $(findstring $(abspath $(builddir)),$(builddir)),,../../)$(builddir)/../GNUmakefile/
_builddir_error := $(shell mkdir -p $(_builddir) 2>&1)
$(if $(_builddir_error),$(error Failed to create build directory: $(_builddir_error)))
endif

# ------------
# Configurable settings:
# 

# Path to the Ishiko Process installation
ISHIKO_PROCESS_ROOT ?= $(ISHIKO)/Process
# Path to the Boost installation
BOOST_ROOT ?= $(BOOST)
# Path to the pugixml installation
PUGIXML_ROOT ?= $(PUGIXML)
# Path to the libgit2 installation
LIBGIT2_ROOT ?= $(LIBGIT2)
# Path to the Ishiko Collections installation
ISHIKO_COLLECTIONS_ROOT ?= $(ISHIKO)/Collections
# Path to the Ishiko Errors installation
ISHIKO_ERRORS_ROOT ?= $(ISHIKO)/Errors
# Path to the DiplodocusDB installation
DIPLODOCUSDB_CORE_ROOT ?= $(DIPLODOCUSDB)/Core
# Path to the DiplodocusDB installation
DIPLODOCUSDB_TREEDB_ROOT ?= $(DIPLODOCUSDB)/TreeDB
# Path to the CodeSmithy installation
CODESMITHY_ROOT ?= $(CODESMITHY)/CodeSmithy

# ------------

all: ../../../Bin/CodeSmithyMake

../../../Bin/CodeSmithyMake: $(_builddir)CodeSmithyMake_main.o
	$(CXX) -o $@ $(LDFLAGS) $(_builddir)CodeSmithyMake_main.o -L$(BOOST_ROOT)/lib -L$(LIBGIT2_ROOT) -L$(ISHIKO_COLLECTIONS_ROOT)/Lib -L$(DIPLODOCUSDB_TREEDB_ROOT)/Lib -L$(DIPLODOCUSDB_CORE_ROOT)/Lib -L$(ISHIKO_ERRORS_ROOT)/Lib -L$(CODESMITHY_ROOT)/Lib -L$(ISHIKO_PROCESS_ROOT)/Lib -lgit2 -lWinhttp -lCrypt32 -lRpcrt4 -pthread

$(_builddir)CodeSmithyMake_main.o: ../../Source/main.cpp
	$(CXX) -c -o $@ $(CPPFLAGS) $(CXXFLAGS) -MD -MP -pthread -DPUGIXML_HEADER_ONLY -I$(BOOST_ROOT)/include -I$(PUGIXML_ROOT)/src -I$(LIBGIT2_ROOT)/include -I$(ISHIKO_COLLECTIONS_ROOT)/Include -I$(DIPLODOCUSDB_TREEDB_ROOT)/Include -I$(DIPLODOCUSDB_CORE_ROOT)/Include -I$(ISHIKO_ERRORS_ROOT)/Include -I$(DIPLODOCUSDB_TREEDB_ROOT)/Include -I$(CODESMITHY_ROOT)/Include -I$(ISHIKO_PROCESS_ROOT)/Include -std=c++11 ../../Source/main.cpp

clean:
	rm -f $(_builddir)*.o
	rm -f $(_builddir)*.d
	rm -f ../../../Bin/CodeSmithyMake

.PHONY: all clean

# Dependencies tracking:
-include $(_builddir)*.d
